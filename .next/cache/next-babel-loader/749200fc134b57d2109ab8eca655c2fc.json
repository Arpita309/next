{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\at\\\\Desktop\\\\todo-next\\\\pages\\\\Note.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { firestore } from \"../firebase/fire\"; //import { SpellInput } from \"./SpellInput\";\n//import { Card } from \"reactstrap\";\n\nimport Card from './main';\n\nfunction App() {\n  const [notes, setSpells] = React.useState([]); // const [newSpellName, setNewSpellName] = React.useState();\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const data = await firestore.collection(\"todos\").get();\n      setSpells(data.docs.map(doc => _objectSpread({}, doc.data(), {\n        id: doc.id\n      })));\n    };\n\n    fetchData();\n  }, []); // const onCreate = () => {\n  // const db = firebase.firestore();\n  //  db.collection(\"spells\").add({ name: newSpellName });\n  // };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, notes.map(todo => __jsx(\"li\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    spells: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/at/Desktop/todo-next/pages/Note.js"],"names":["React","firestore","Card","App","notes","setSpells","useState","useEffect","fetchData","data","collection","get","docs","map","doc","id","todo"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,SAAR,QAAwB,kBAAxB,C,CACA;AACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA3B,CADa,CAEd;;AAECN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpB,UAAMC,SAAS,GAAG,YAAY;AAE5B,YAAMC,IAAI,GAAG,MAAMR,SAAS,CAACS,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,EAAnB;AACAN,MAAAA,SAAS,CAACI,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAcC,GAAG,sBAAUA,GAAG,CAACL,IAAJ,EAAV;AAAsBM,QAAAA,EAAE,EAAED,GAAG,CAACC;AAA9B,QAAjB,CAAD,CAAT;AACD,KAJD;;AAKAP,IAAAA,SAAS;AACV,GAPD,EAOG,EAPH,EAJa,CAad;AACE;AACD;AACD;;AAEC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGJ,KAAK,CAACS,GAAN,CAAUG,IAAI,IACb;AAAI,IAAA,GAAG,EAAED,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAEC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CAHH,CADF;AAWD;;AAED,eAAeb,GAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport {firestore} from \"../firebase/fire\";\r\n//import { SpellInput } from \"./SpellInput\";\r\n//import { Card } from \"reactstrap\";\r\nimport Card from './main'\r\n\r\nfunction App() {\r\n  const [notes, setSpells] = React.useState([]);\r\n // const [newSpellName, setNewSpellName] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      \r\n      const data = await firestore.collection(\"todos\").get();\r\n      setSpells(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n // const onCreate = () => {\r\n   // const db = firebase.firestore();\r\n  //  db.collection(\"spells\").add({ name: newSpellName });\r\n // };\r\n\r\n  return (\r\n    <div>\r\n      \r\n     \r\n      {notes.map(todo => (\r\n        <li key={id}>\r\n          <Card spells={todo} />\r\n        </li>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}