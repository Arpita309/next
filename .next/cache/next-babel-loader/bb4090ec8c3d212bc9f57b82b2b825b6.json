{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\at\\\\Desktop\\\\todo-next\\\\pages\\\\home.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Note from \"./Note\";\nimport Header from '../components/Navbar';\nimport { firestore, auth } from '../firebase/fire';\nimport Card from './main';\n\nvar Home = /*#__PURE__*/function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyPress\", function (event) {\n      if (event.key === \"Enter\") {\n        // let noteArr = this.state.notes;\n        // noteArr.push(this.state.noteText);\n        //  this.setState({ noteText: ''});\n        firestore.collection('todos').add({\n          todo: _this.state.noteText\n        });\n      }\n    });\n\n    _this.state = {\n      noteText: '',\n      notes: []\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      auth.onAuthStateChanged(function (user) {\n        if (user) {\n          console.log('user logged in: ', user);\n          firestore.collection('todos').get().then(function (querySnapshot) {\n            _this2.setState({\n              notes: querySnapshot.docs\n            });\n\n            var data = querySnapshot.docs.data();\n            console.log(data);\n          });\n        } else {\n          console.log('user logged out');\n        }\n      });\n    }\n  }, {\n    key: \"updateNoteText\",\n    value: function updateNoteText(noteText) {\n      this.setState({\n        noteText: noteText.target.value\n      });\n    }\n  }, {\n    key: \"deleteNote\",\n    value: function deleteNote(index) {\n      var noteArr = this.state.notes;\n      noteArr.splice(index, 1);\n      this.setState({\n        notes: noteArr\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, __jsx(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }), __jsx(Card, {\n        notes: this.state.notes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }), __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"button \",\n        onClick: function onClick(noteText) {\n          return _this3.updateNoteText(noteText);\n        },\n        style: {\n          fontStyle: \"oblique\",\n          marginBottom: \"10px\",\n          marginTop: \"80px\",\n          color: \"#E54E65\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, \"Add note\"), __jsx(\"input\", {\n        style: {\n          backgroundColor: \"#E2CEEE\"\n        },\n        placeholder: \"Enter Notes\",\n        type: \"text\",\n        className: \"input \",\n        ref: function ref(input) {\n          _this3.textInput = input;\n        },\n        value: this.state.noteText,\n        onChange: function onChange(noteText) {\n          return _this3.updateNoteText(noteText);\n        },\n        onKeyPress: this.handleKeyPress.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/at/Desktop/todo-next/pages/home.js"],"names":["React","Component","Note","Header","firestore","auth","Card","Home","props","event","key","collection","add","todo","state","noteText","notes","onAuthStateChanged","user","console","log","get","then","querySnapshot","setState","docs","data","target","value","index","noteArr","splice","updateNoteText","fontStyle","marginBottom","marginTop","color","backgroundColor","input","textInput","handleKeyPress","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Note from \"./Note\";\r\nimport Header from '../components/Navbar';\r\nimport {firestore,auth} from '../firebase/fire';\r\nimport Card from'./main'\r\n  \r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {\r\n      noteText: '',\r\n      notes: [],\r\n    };\r\n    \r\n  }\r\n \r\n    componentDidMount(){\r\n      auth.onAuthStateChanged(user => {\r\n        if (user) {\r\n          console.log('user logged in: ', user);\r\n          firestore.collection('todos').get().then(querySnapshot => {\r\n          \r\n           this.setState({notes:querySnapshot.docs});\r\n           const data=querySnapshot.docs.data()\r\n           console.log(data);\r\n           \r\n             });\r\n        } else {\r\n          console.log('user logged out');\r\n          \r\n        }\r\n      })\r\n    }\r\n\r\n  updateNoteText(noteText){\r\n    this.setState({noteText: noteText.target.value})\r\n  }\r\n  \r\n  \r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === \"Enter\"){\r\n     // let noteArr = this.state.notes;\r\n     // noteArr.push(this.state.noteText);\r\n    //  this.setState({ noteText: ''});\r\n    firestore.collection('todos').add({\r\n      todo:this.state.noteText\r\n    })\r\n      \r\n    }\r\n  }\r\n\r\n  deleteNote (index){\r\n    let noteArr = this.state.notes;\r\n    noteArr.splice(index, 1);\r\n    this.setState({ notes: noteArr })\r\n  }\r\n\r\n  render() {\r\n\r\n    \r\n\r\n    return (\r\n      <div>\r\n         \r\n          <Header/>\r\n          <Card notes={this.state.notes}/>\r\n        \r\n        <div className=\"container\">\r\n        <div className=\"button \" onClick={noteText => this.updateNoteText(noteText)} style ={{fontStyle:\"oblique\",marginBottom:\"10px\",marginTop:\"80px\", color:\"#E54E65\"}}>Add note</div>\r\n        <input  style={{backgroundColor:\"#E2CEEE\"}} placeholder=\"Enter Notes\" type=\"text\" className=\"input \"\r\n        ref={((input) => {this.textInput = input})}\r\n        value={this.state.noteText}\r\n        onChange={noteText => this.updateNoteText(noteText)}\r\n        onKeyPress={this.handleKeyPress.bind(this)}\r\n        />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}