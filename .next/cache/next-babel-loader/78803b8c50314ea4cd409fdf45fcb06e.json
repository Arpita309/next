{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\at\\\\Desktop\\\\todo-next\\\\pages\\\\Note.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label, NavLink } from 'reactstrap';\nimport { firestore, auth } from '../firebase/fire';\nimport Header from '../components/Navbar';\nconst todoRef = firestore.collection(\"todos\");\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"addTodo\", e => {\n      e.preventDefault();\n      const ref = todoRef.doc();\n      ref.set({\n        task: this.state.todo,\n        createdAt: new Date().getTime(),\n        done: false,\n        id: ref.id\n      }).then(function (docRef) {\n        console.log(docRef);\n      }).catch(function (error) {\n        console.error(\"Error adding document: \", error);\n      });\n    });\n\n    _defineProperty(this, \"updateTodo\", e => {\n      this.toggleUpdate();\n      e.preventDefault();\n      const a = e.target;\n      const b = this.state.update;\n      const ref = todoRef.doc();\n      todoRef.doc(b).update({\n        task: a.value\n      }).then(function (docRef) {\n        console.log(docRef);\n      }).catch(function (error) {\n        console.error(\"Error updating document: \", error);\n      });\n    });\n\n    _defineProperty(this, \"deleteTodo\", e => {\n      todoRef.doc(e.target.value).delete().then(function () {\n        console.log(\"Document successfully deleted!\");\n      }).catch(function (error) {\n        console.error(\"Error removing document: \", error);\n      });\n    });\n\n    _defineProperty(this, \"handleUpdate\", e => {\n      this.toggleUpdate();\n      const t = e.target;\n      this.setState({\n        update: t.value\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      const t = e.target;\n      this.setState({\n        [t.name]: t.value\n      });\n    });\n\n    this.state = {\n      todos: [],\n      isUpdate: false,\n      update: ''\n    };\n    this.toggleUpdate = this.toggleUpdate.bind(this);\n  }\n\n  toggleUpdate() {\n    this.setState({\n      isUpdate: !this.state.isUpdate\n    });\n  }\n\n  componentWillMount() {\n    todoRef.orderBy('createdAt').onSnapshot(docSnapShot => {\n      let todos = [];\n      docSnapShot.forEach(doc => {\n        todos.push(doc.data());\n      });\n      this.setState({\n        todos,\n        loaded: true\n      });\n    });\n  }\n\n  renderTodoList() {\n    const ListItem = this.state.todos.map((todo, index) => {\n      return __jsx(\"div\", {\n        className: \"card text-dark mb-3 mt-4 ml-3\",\n        style: {\n          maxWidth: \"50rem\",\n          backgroundColor: \"#e6ff99\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"card-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        className: \"card-text \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 32\n        }\n      }, todo.task)), __jsx(\"button\", {\n        value: todo.id,\n        className: \"btn btn-sm btn-danger\",\n        onClick: this.deleteTodo,\n        style: {\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, \"X\"), __jsx(\"button\", {\n        value: todo.id,\n        className: \"btn btn-sm btn-info\",\n        onClick: this.handleUpdate,\n        style: {\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }, \"Update\"), __jsx(Modal, {\n        isOpen: this.state.isUpdate,\n        toggle: this.toggleUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }\n      }, __jsx(ModalHeader, {\n        toggle: this.toggleUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, \"Update\"), __jsx(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, __jsx(Form, {\n        onSubmit: this.updateTodo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, __jsx(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }\n      }, __jsx(Label, {\n        htmlFor: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 33\n        }\n      }, \"Task\"), __jsx(Input, {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        innerRef: input => this.username = input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }\n      })), __jsx(Button, {\n        type: \"submit\",\n        value: submit,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }\n      }, \"Update\")))))));\n    });\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, ListItem);\n  }\n\n  render() {\n    console.log(this.state);\n    console.log(this.state.notes);\n    return __jsx(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }), __jsx(\"form\", {\n      onSubmit: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      name: \"todo\",\n      style: {\n        backgroundColor: \"#E2CEEE\",\n        marginTop: \"20px\",\n        marginLeft: \"8px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }), __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      onClick: this.addTodo,\n      style: {\n        marginTop: \"20px\",\n        marginLeft: \"8px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, \"Add Todo\"))), this.renderTodoList());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/at/Desktop/todo-next/pages/Note.js"],"names":["React","Component","Navbar","NavbarBrand","Nav","NavbarToggler","Collapse","NavItem","Jumbotron","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Input","Label","NavLink","firestore","auth","Header","todoRef","collection","App","constructor","e","preventDefault","ref","doc","set","task","state","todo","createdAt","Date","getTime","done","id","then","docRef","console","log","catch","error","toggleUpdate","a","target","b","update","value","delete","t","setState","name","todos","isUpdate","bind","componentWillMount","orderBy","onSnapshot","docSnapShot","forEach","push","data","loaded","renderTodoList","ListItem","map","index","maxWidth","backgroundColor","deleteTodo","float","handleUpdate","updateTodo","input","username","submit","render","notes","addTodo","handleChange","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label,NavLink } from 'reactstrap';\r\n\r\nimport {firestore,auth} from '../firebase/fire'\r\nimport Header from '../components/Navbar';\r\n\r\nconst todoRef = firestore.collection(\"todos\");\r\n\r\nclass App extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      todos: [],\r\n      isUpdate:false,\r\n      update:''\r\n    }\r\n    this.toggleUpdate = this.toggleUpdate.bind(this);\r\n  }\r\n\r\n  addTodo = (e) => {\r\n    e.preventDefault()\r\n\r\n    const ref = todoRef.doc()\r\n    ref.set({\r\n      task: this.state.todo,\r\n      createdAt:(new Date()).getTime(),\r\n      done: false,\r\n      id: ref.id\r\n    })\r\n    .then(function(docRef) {\r\n      console.log(docRef)\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error adding document: \", error);\r\n    });\r\n  }\r\n  toggleUpdate() {\r\n    this.setState({\r\n      isUpdate: !this.state.isUpdate\r\n    });\r\n  }\r\n  updateTodo=(e)=>{\r\n    this.toggleUpdate();\r\n    e.preventDefault();\r\n    const a=e.target\r\n    const b=this.state.update\r\n    const ref = todoRef.doc()\r\n    todoRef.doc(b).update({\r\n     task :a.value\r\n      \r\n  })\r\n    .then(function(docRef) {\r\n      console.log(docRef)\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error updating document: \", error);\r\n    });\r\n    \r\n  }\r\n\r\n  deleteTodo = (e) => {\r\n    todoRef.doc(e.target.value).delete().then(function() {\r\n      console.log(\"Document successfully deleted!\");\r\n    }).catch(function(error) {\r\n      console.error(\"Error removing document: \", error);\r\n    });\r\n  }\r\n  handleUpdate = (e) => {\r\n    this.toggleUpdate();\r\n    const t = e.target\r\n    this.setState({\r\n      update: t.value\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const t = e.target\r\n    this.setState({\r\n      [t.name]: t.value\r\n    })\r\n  }\r\n\r\n  componentWillMount () {\r\n    todoRef.orderBy('createdAt').onSnapshot((docSnapShot) => {\r\n      let todos = []\r\n      docSnapShot.forEach(doc => {todos.push(doc.data())})\r\n      this.setState({\r\n        todos,\r\n        loaded: true\r\n      })\r\n    })\r\n    \r\n\r\n  }\r\n  \r\n\r\n  renderTodoList () {\r\n    const ListItem = this.state.todos.map((todo, index) => {\r\n      return (\r\n        <div className=\"card text-dark mb-3 mt-4 ml-3\" style={{maxWidth: \"50rem\",backgroundColor:\"#e6ff99\"}}>\r\n        <div className=\"card-content\">\r\n                \r\n\r\n               \r\n                       \r\n        <div className=\"card-body\">\r\n         \r\n     <p className=\"card-text \"><h3>{todo.task}</h3></p>\r\n     \r\n\r\n        \r\n      \r\n     \r\n      <button value={todo.id} className=\"btn btn-sm btn-danger\" onClick={this.deleteTodo} style={{float:\"right\"}}>X</button>\r\n      <button  value={todo.id} className=\"btn btn-sm btn-info\" onClick={this.handleUpdate} style={{float:\"right\"}}>Update</button>\r\n     \r\n      <Modal isOpen={this.state.isUpdate} toggle={this.toggleUpdate}> \r\n                <ModalHeader toggle={this.toggleUpdate}>Update</ModalHeader>              \r\n                <ModalBody>\r\n                    <Form  onSubmit={this.updateTodo}>\r\n                    \r\n                               \r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Task</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            \r\n                            \r\n                            <Button type=\"submit\" value={submit}color=\"primary\">Update</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n\r\n</Modal>\r\n \r\n </div>\r\n </div>\r\n </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div>\r\n{ListItem}\r\n      </div>\r\n        \r\n     \r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    console.log(this.state.notes)\r\n    \r\n    return (\r\n      \r\n      <div className=\"App\">\r\n        <Header/>\r\n        \r\n        <form onSubmit={this.addTodo}>\r\n          <div className=\"input-group\">\r\n            <input type=\"text\" onChange={this.handleChange} name=\"todo\" style={{backgroundColor:\"#E2CEEE\",marginTop:\"20px\",marginLeft:\"8px\"}} />\r\n            <button className=\"btn btn-primary\" type=\"submit\" onClick={this.addTodo} style={{marginTop:\"20px\",marginLeft:\"8px\"}}>Add Todo</button>\r\n          </div>\r\n        </form>\r\n        {this.renderTodoList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}