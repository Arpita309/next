{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\at\\\\Desktop\\\\todo-next\\\\components\\\\Navbar.js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label, NavLink } from 'reactstrap';\nimport { auth, database } from '../firebase/fire';\n\nfunction writeUserData(firstname, lastname, username, paasword) {\n  firebase.database().ref('users/' + userId).set({\n    firstname: firstname,\n    lastname: lastname,\n    email: username,\n    pass: password\n  });\n}\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      isSignupOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  toggleSignup() {\n    this.setState({\n      isSignupOpen: !this.state.isSignupOpen\n    });\n  }\n\n  handleLogin(event) {\n    this.toggleModal();\n    auth().signInWithEmailAndPassword(email, password).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n\n      if (errorCode === 'auth/wrong-password') {\n        alert('Wrong password.');\n      } else {\n        alert(errorMessage);\n      }\n    });\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\n    event.preventDefault();\n  }\n\n  handleSignUp(event) {\n    this.toggleSignup();\n    writeUserData(this.firstname.value, this.lastname.value, this.username.value, this.password.value);\n    alert(\"Firstname: \" + this.firstname.value + \"Lastname: \" + this.lastname.value + \"Username: \" + this.username.value + \" Password: \" + this.password.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, __jsx(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-dark bg-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, __jsx(NavbarBrand, {\n      className: \"mr-auto\",\n      style: {\n        fontSize: \"30px\",\n        fontFamily: \"cursive\",\n        color: \"#D6E149\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, \"Todo App\"), __jsx(Nav, {\n      className: \"ml-auto \",\n      navbar: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: \"btn-group mr-auto\",\n      role: \"group\",\n      \"aria-label\": \"Basic example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: this.toggleModal,\n      className: \"btn btn-warning\",\n      style: {\n        paddingRight: \"4px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, \"Login\"), __jsx(\"button\", {\n      type: \"button\",\n      onClick: this.toggleSignup,\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, \"Signup\"))))), __jsx(Modal, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, __jsx(ModalHeader, {\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Login\"), __jsx(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, __jsx(Form, {\n      onSubmit: this.handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, __jsx(Label, {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, \"Username\"), __jsx(Input, {\n      type: \"text\",\n      id: \"username\",\n      name: \"username\",\n      innerRef: input => this.username = input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    })), __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, __jsx(Label, {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, \"Password\"), __jsx(Input, {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      innerRef: input => this.password = input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    })), __jsx(FormGroup, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, __jsx(Label, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }, __jsx(Input, {\n      type: \"checkbox\",\n      name: \"remember\",\n      innerRef: input => this.remember = input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    }), \"Remember me\")), __jsx(Button, {\n      type: \"submit\",\n      value: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, \"Login\")))), __jsx(Modal, {\n      isOpen: this.state.isSignupOpen,\n      toggle: this.toggleSignup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 1\n      }\n    }, __jsx(ModalHeader, {\n      toggle: this.toggleSignup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \"SignUp\"), __jsx(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, __jsx(Form, {\n      onSubmit: this.handleSignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, __jsx(Label, {\n      htmlFor: \"firstname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, \"Firstname\"), __jsx(Input, {\n      type: \"text\",\n      id: \"firstname\",\n      name: \"firstname\",\n      innerRef: input => this.firstname = input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    })), __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }, __jsx(Label, {\n      htmlFor: \"lastname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    }, \"Lastname\"), __jsx(Input, {\n      type: \"text\",\n      id: \"lastname\",\n      name: \"lastname\",\n      innerRef: input => this.lastname = input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    })), __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, __jsx(Label, {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, \"Username\"), __jsx(Input, {\n      type: \"text\",\n      id: \"username\",\n      name: \"username\",\n      innerRef: input => this.username = input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    })), __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, __jsx(Label, {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, \"Password\"), __jsx(Input, {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      innerRef: input => this.password = input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    })), __jsx(Button, {\n      type: \"submit\",\n      value: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, \"SignUp\")))));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/at/Desktop/todo-next/components/Navbar.js"],"names":["Head","Link","React","Component","Navbar","NavbarBrand","Nav","NavbarToggler","Collapse","NavItem","Jumbotron","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Input","Label","NavLink","auth","database","writeUserData","firstname","lastname","username","paasword","firebase","ref","userId","set","email","pass","password","Header","constructor","props","state","isNavOpen","isModalOpen","isSignupOpen","toggleModal","bind","handleLogin","toggleSignup","setState","event","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","alert","value","remember","checked","preventDefault","handleSignUp","render","fontSize","fontFamily","color","paddingRight","input"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport Link from  'next/link';\r\nimport React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label,NavLink } from 'reactstrap';\r\n  import{auth,database}from '../firebase/fire';\r\n  \r\n  function writeUserData( firstname,lastname, username, paasword) {\r\n    firebase.database().ref('users/' + userId).set({\r\n      firstname:firstname,\r\n      lastname: lastname,\r\n      email:username,\r\n      pass:password\r\n    });\r\n  }\r\n  class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        \r\n        this.state = {\r\n          isNavOpen: false,\r\n            isModalOpen: false,\r\n            isSignupOpen:false\r\n        \r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.toggleSignup = this.toggleSignup.bind(this);\r\n      }\r\n\r\n      \r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      toggleSignup() {\r\n        this.setState({\r\n          isSignupOpen: !this.state.isSignupOpen\r\n        });\r\n      }\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        auth().signInWithEmailAndPassword(email, password).catch(function(error) {\r\n          \r\n          var errorCode = error.code;\r\n          var errorMessage = error.message;\r\n          \r\n          if (errorCode === 'auth/wrong-password') {\r\n            alert('Wrong password.');\r\n          } else {\r\n            alert(errorMessage);\r\n          }\r\n         \r\n        \r\n        \r\n        });\r\n        \r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n     handleSignUp(event) {\r\n      this.toggleSignup();\r\n      writeUserData(this.firstname.value,this.lastname.value,this.username.value,this.password.value)\r\n     \r\n      alert(\"Firstname: \"+this.firstname.value+\"Lastname: \"+this.lastname.value+\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n         );\r\n      event.preventDefault();\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                    <div className=\"container-fluid\">\r\n                        \r\n                        <NavbarBrand className=\"mr-auto\"  style={{fontSize:\"30px\" ,fontFamily:\"cursive\",color:\"#D6E149\"}}>Todo App</NavbarBrand>\r\n                        \r\n                            \r\n                            \r\n                            <Nav className=\"ml-auto \" navbar >\r\n                            <div className=\"btn-group mr-auto\" role=\"group\" aria-label=\"Basic example\">\r\n                                <button type=\"button\"  onClick={this.toggleModal} className=\"btn btn-warning\" style={{paddingRight:\"4px\"}}>Login</button>\r\n                                <button type=\"button\"  onClick={this.toggleSignup} className=\"btn btn-success\" >Signup</button>\r\n                                \r\n                                \r\n                              </div>\r\n                                    \r\n                                \r\n                            </Nav>\r\n                    \r\n                    </div>\r\n                </nav>\r\n                \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}> \r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>              \r\n                <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n\r\n</Modal>\r\n<Modal isOpen={this.state.isSignupOpen} toggle={this.toggleSignup}> \r\n                <ModalHeader toggle={this.toggleSignup}>SignUp</ModalHeader>              \r\n                <ModalBody>\r\n                    <Form onSubmit={this.handleSignUp}>\r\n                    <FormGroup>\r\n                                <Label htmlFor=\"firstname\">Firstname</Label>\r\n                                <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                    innerRef={(input) => this.firstname = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"lastname\">Lastname</Label>\r\n                                <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                    innerRef={(input) => this.lastname = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            \r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">SignUp</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n\r\n</Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}