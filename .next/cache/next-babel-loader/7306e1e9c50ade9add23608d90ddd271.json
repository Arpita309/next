{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\at\\\\Desktop\\\\todo-next\\\\pages\\\\home.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Note from \"./Note\";\nimport Header from '../components/Navbar';\nimport { firestore, auth } from '../firebase/fire';\nimport { CardBody, CardText } from 'reactstrap'; //import Card from './main';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleKeyPress\", event => {\n      if (event.key === \"Enter\") {\n        // let noteArr = this.state.notes;\n        // noteArr.push(this.state.noteText);\n        //  this.setState({ noteText: ''});\n        firestore.collection('todos').add({\n          todo: this.state.noteText\n        });\n      }\n    });\n\n    this.state = {\n      noteText: '',\n      notes: []\n    }; // this.Card=this.Card.bind(this);\n  }\n\n  componentDidMount() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        console.log('user logged in: ', user);\n        firestore.collection('todos').get().then(querySnapshot => {\n          querySnapshot.docs.forEach(doc => {\n            const data = doc.data().todo;\n            Note(data);\n            console.log(data);\n            this.setState({\n              notes: doc.data()\n            }); //const data=doc.data();\n            // console.log(data);\n          });\n        });\n      } else {\n        console.log('user logged out');\n      }\n    });\n  } // Card({data}){\n  // <div>\n  // {data}\n  // </div>\n\n\n  updateNoteText(noteText) {\n    this.setState({\n      noteText: noteText.target.value\n    });\n  }\n\n  deleteNote(index) {\n    let noteArr = this.state.notes;\n    noteArr.splice(index, 1);\n    this.setState({\n      notes: noteArr\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"button \",\n      onClick: noteText => this.updateNoteText(noteText),\n      style: {\n        fontStyle: \"oblique\",\n        marginBottom: \"10px\",\n        marginTop: \"80px\",\n        color: \"#E54E65\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Add note\"), __jsx(\"input\", {\n      style: {\n        backgroundColor: \"#E2CEEE\"\n      },\n      placeholder: \"Enter Notes\",\n      type: \"text\",\n      className: \"input \",\n      ref: input => {\n        this.textInput = input;\n      },\n      value: this.state.noteText,\n      onChange: noteText => this.updateNoteText(noteText),\n      onKeyPress: this.handleKeyPress.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/at/Desktop/todo-next/pages/home.js"],"names":["React","Component","Note","Header","firestore","auth","CardBody","CardText","Home","constructor","props","event","key","collection","add","todo","state","noteText","notes","componentDidMount","onAuthStateChanged","user","console","log","get","then","querySnapshot","docs","forEach","doc","data","setState","updateNoteText","target","value","deleteNote","index","noteArr","splice","render","fontStyle","marginBottom","marginTop","color","backgroundColor","input","textInput","handleKeyPress","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Note from \"./Note\";\r\nimport Header from '../components/Navbar';\r\nimport {firestore,auth} from '../firebase/fire';\r\nimport {CardBody,CardText} from 'reactstrap';\r\n//import Card from './main';\r\n\r\n  \r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {\r\n      noteText: '',\r\n      notes: [],\r\n    };\r\n   // this.Card=this.Card.bind(this);\r\n  }\r\n \r\n    componentDidMount(){\r\n      auth.onAuthStateChanged(user => {\r\n        if (user) {\r\n          console.log('user logged in: ', user);\r\n          firestore.collection('todos').get().then(querySnapshot => {\r\n          querySnapshot.docs.forEach(doc=>{\r\n            const data=doc.data().todo;\r\n           Note(data);\r\n            console.log(data);\r\n           \r\n           this.setState({notes:doc.data()});\r\n           //const data=doc.data();\r\n          // console.log(data);\r\n           \r\n             })});\r\n        } else {\r\n          console.log('user logged out');\r\n          \r\n        }\r\n      })\r\n    }\r\n\r\n  // Card({data}){\r\n    // <div>\r\n    // {data}\r\n    // </div>\r\n        \r\n   \r\n   \r\n  \r\n \r\n\r\n\r\n  updateNoteText(noteText){\r\n    this.setState({noteText: noteText.target.value})\r\n  }\r\n  \r\n  \r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === \"Enter\"){\r\n     // let noteArr = this.state.notes;\r\n     // noteArr.push(this.state.noteText);\r\n    //  this.setState({ noteText: ''});\r\n    firestore.collection('todos').add({\r\n      todo:this.state.noteText\r\n    })\r\n      \r\n    }\r\n  }\r\n\r\n  deleteNote (index){\r\n    let noteArr = this.state.notes;\r\n    noteArr.splice(index, 1);\r\n    this.setState({ notes: noteArr })\r\n  }\r\n\r\n  render() {\r\n\r\n    \r\n\r\n    return (\r\n      <div>\r\n         \r\n          <Header/>\r\n            \r\n    \r\n        <div className=\"container\">\r\n        <div className=\"button \" onClick={noteText => this.updateNoteText(noteText)} style ={{fontStyle:\"oblique\",marginBottom:\"10px\",marginTop:\"80px\", color:\"#E54E65\"}}>Add note</div>\r\n        <input  style={{backgroundColor:\"#E2CEEE\"}} placeholder=\"Enter Notes\" type=\"text\" className=\"input \"\r\n        ref={((input) => {this.textInput = input})}\r\n        value={this.state.noteText}\r\n        onChange={noteText => this.updateNoteText(noteText)}\r\n        onKeyPress={this.handleKeyPress.bind(this)}\r\n        />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}