{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label, NavLink } from 'reactstrap';\nimport { auth, database, firestore } from '../firebase/Fire';\nimport Card from '../pages/Main';\n\nvar Header = /*#__PURE__*/function (_Component) {\n  _inherits(Header, _Component);\n\n  var _super = _createSuper(Header);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      isSignupOpen: false\n    };\n    _this.toggleModal = _this.toggleModal.bind(_assertThisInitialized(_this));\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_this));\n    _this.toggleSignup = _this.toggleSignup.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"toggleModal\",\n    value: function toggleModal() {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    }\n  }, {\n    key: \"toggleSignup\",\n    value: function toggleSignup() {\n      this.setState({\n        isSignupOpen: !this.state.isSignupOpen\n      });\n    }\n  }, {\n    key: \"handleLogin\",\n    value: function handleLogin(event) {\n      this.toggleModal();\n      event.preventDefault();\n      auth.signInWithEmailAndPassword(this.username.value, this.password.value);\n    }\n  }, {\n    key: \"handleSignUp\",\n    value: function handleSignUp(event) {\n      this.toggleSignup();\n      event.preventDefault();\n      console.log(\"username : \" + this.username.value + \"password : \" + this.password.value);\n      auth.createUserWithEmailAndPassword(this.username.value, this.password.value).then(function (Credential) {\n        console.log(Credential);\n      });\n    }\n  }, {\n    key: \"handleLogOut\",\n    value: function handleLogOut(event) {\n      event.preventDefault();\n      auth.signOut().then(function () {\n        console.log('user signed out');\n      });\n\n      __jsx(Card, {\n        notes: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", null, __jsx(\"nav\", {\n        className: \"navbar navbar-expand-lg navbar-dark bg-primary\"\n      }, __jsx(\"div\", {\n        className: \"container-fluid\"\n      }, __jsx(NavbarBrand, {\n        className: \"mr-auto\",\n        style: {\n          fontSize: \"30px\",\n          fontFamily: \"cursive\",\n          color: \"#D6E149\"\n        }\n      }, \"Todo App\"), __jsx(Nav, {\n        className: \"ml-auto \",\n        navbar: true\n      }, __jsx(\"div\", {\n        className: \"btn-group mr-auto\",\n        role: \"group\",\n        \"aria-label\": \"Basic example\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        onClick: this.toggleModal,\n        className: \"btn btn-warning\",\n        style: {\n          paddingRight: \"4px\"\n        }\n      }, \"Login\"), __jsx(\"button\", {\n        type: \"button\",\n        onClick: this.toggleSignup,\n        className: \"btn btn-success\"\n      }, \"Signup\"), __jsx(\"button\", {\n        type: \"button\",\n        onClick: this.handleLogOut,\n        className: \"btn btn-danger\"\n      }, \"Logout\"))))), __jsx(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal\n      }, __jsx(ModalHeader, {\n        toggle: this.toggleModal\n      }, \"Login\"), __jsx(ModalBody, null, __jsx(Form, {\n        onSubmit: this.handleLogin\n      }, __jsx(FormGroup, null, __jsx(Label, {\n        htmlFor: \"username\"\n      }, \"Username\"), __jsx(Input, {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        innerRef: function innerRef(input) {\n          return _this2.username = input;\n        }\n      })), __jsx(FormGroup, null, __jsx(Label, {\n        htmlFor: \"password\"\n      }, \"Password\"), __jsx(Input, {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        innerRef: function innerRef(input) {\n          return _this2.password = input;\n        }\n      })), __jsx(FormGroup, {\n        check: true\n      }, __jsx(Label, {\n        check: true\n      }, __jsx(Input, {\n        type: \"checkbox\",\n        name: \"remember\",\n        innerRef: function innerRef(input) {\n          return _this2.remember = input;\n        }\n      }), \"Remember me\")), __jsx(Button, {\n        type: \"submit\",\n        value: \"submit\",\n        color: \"primary\"\n      }, \"Login\")))), __jsx(Modal, {\n        isOpen: this.state.isSignupOpen,\n        toggle: this.toggleSignup\n      }, __jsx(ModalHeader, {\n        toggle: this.toggleSignup\n      }, \"SignUp\"), __jsx(ModalBody, null, __jsx(Form, {\n        onSubmit: this.handleSignUp\n      }, __jsx(FormGroup, null, __jsx(Label, {\n        htmlFor: \"username\"\n      }, \"Username\"), __jsx(Input, {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        innerRef: function innerRef(input) {\n          return _this2.username = input;\n        }\n      })), __jsx(FormGroup, null, __jsx(Label, {\n        htmlFor: \"password\"\n      }, \"Password\"), __jsx(Input, {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        innerRef: function innerRef(input) {\n          return _this2.password = input;\n        }\n      })), __jsx(Button, {\n        type: \"submit\",\n        value: \"submit\",\n        color: \"primary\"\n      }, \"SignUp\")))));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}