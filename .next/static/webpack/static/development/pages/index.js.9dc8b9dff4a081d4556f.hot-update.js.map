{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.9dc8b9dff4a081d4556f.hot-update.js","sources":["webpack:///./pages/Home.js","webpack:///./pages/Note.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Note from \"./Note\";\r\nimport Header from '../components/Navbar';\r\nimport {firestore,auth} from '../firebase/fire';\r\nimport {CardBody,CardText} from 'reactstrap';\r\nimport Card from './main';\r\n\r\n  \r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {\r\n      noteText: '',\r\n      notes: [],\r\n        };\r\n   \r\n  }\r\n \r\n    componentDidMount(){\r\n      auth.onAuthStateChanged(user => {\r\n        if (user) {\r\n          console.log('user logged in: ', user);\r\n          firestore.collection('todos').get().then(querySnapshot => {\r\n            \r\n          querySnapshot.docs.forEach(doc=>{\r\n            const data=doc.data().todo;\r\n            const id=doc.id;\r\n            console.log(id);\r\n          \r\n            console.log(data);\r\n           \r\n           \r\n           this.setState({notes:doc.data(),id:doc.id\r\n           });\r\n           //const data=doc.data();\r\n          // console.log(data);\r\n           \r\n             })});\r\n        } else {\r\n          console.log('user logged out');\r\n          \r\n        }\r\n      })\r\n    }\r\n\r\n \r\n        \r\n   \r\n   \r\n  \r\n \r\n\r\n\r\n  updateNoteText(noteText){\r\n    this.setState({noteText: noteText.target.value})\r\n  }\r\n  \r\n  \r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === \"Enter\"){\r\n     // let noteArr = this.state.notes;\r\n     // noteArr.push(this.state.noteText);\r\n    //  this.setState({ noteText: ''});\r\n    firestore.collection('todos').add({\r\n      todo:this.state.noteText\r\n    })\r\n    this.setState({ noteText: ''});\r\n      \r\n    }\r\n  }\r\n\r\n  deleteNote (index){\r\n    let noteArr = this.state.notes;\r\n    noteArr.splice(index, 1);\r\n    this.setState({ notes: noteArr })\r\n  }\r\n  \r\n\r\n  render() {\r\n\r\n   \r\n    // console.log(this.state.notes) ;\r\n    \r\n\r\n    return (\r\n      <div>\r\n         \r\n          <Header/>\r\n          \r\n\r\n             \r\n        \r\n          \r\n    \r\n        <div className=\"container\">\r\n        <div className=\"button \" onClick={noteText => this.updateNoteText(noteText)} style ={{fontStyle:\"oblique\",marginBottom:\"10px\",marginTop:\"80px\", color:\"#E54E65\"}}>Add note</div>\r\n        <input  style={{backgroundColor:\"#E2CEEE\"}} placeholder=\"Enter Notes\" type=\"text\" className=\"input \"\r\n        ref={((input) => {this.textInput = input})}\r\n        value={this.state.noteText}\r\n        onChange={noteText => this.updateNoteText(noteText)}\r\n        onKeyPress={this.handleKeyPress.bind(this)}\r\n        />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport {firestore} from \"../firebase/fire\";\r\n//import { SpellInput } from \"./SpellInput\";\r\n//import { Card } from \"reactstrap\";doc\r\nimport Card from './main'\r\n\r\nfunction App() {\r\n  const [notes, setNotes] = React.useState([]);\r\n // const [newSpellName, setNewSpellName] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      \r\n      const data = await firestore.collection(\"todos\").get();\r\n      firestore.collection(\"todos\").get()\r\n      /*.then(querySnapshot=>{\r\n        querySnapshot.docs.forEach(doc=>{\r\n          const info=doc.data().todo;\r\n          const id=doc.id;\r\n          console.log(info);\r\n       }) })*/\r\n      \r\n      setNotes(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n // const onCreate = () => {\r\n   // const db = firebase.firestore();\r\n  //  db.collection(\"spells\").add({ name: newSpellName });\r\n // };\r\n\r\n  return (\r\n    <div>\r\n      \r\n     \r\n      {notes.map(todo => (\r\n        <div key={notes.id}>\r\n          <Card spells={todo} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmDA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AA5DA;AACA;AACA;AAFA;AAFA;AAOA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;AAUA;AACA;AAAA;AAAA;AACA;;;AAiBA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAGA;AAAA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AAnGA;AACA;AAsGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;;;;;;;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AACA;AACA;;;;A","sourceRoot":""}