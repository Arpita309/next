{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.c39e82ec00f112ca2baa.hot-update.js","sources":["webpack:///./components/Navbar.js","webpack:///./firebase/Config.js","webpack:///./firebase/Fire.js","webpack:///./pages/Home.js","webpack:///./pages/Main.js","webpack:///./pages/Note.js"],"sourcesContent":["import Head from 'next/head';\r\nimport Link from  'next/link';\r\nimport React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label,NavLink } from 'reactstrap';\r\n  import{auth,database, firestore}from '../firebase/Fire';\r\n  import Card from '../pages/Main'\r\n  \r\n    \r\n\r\n  \r\n  \r\n  class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        \r\n        this.state = {\r\n          isNavOpen: false,\r\n            isModalOpen: false,\r\n            isSignupOpen:false\r\n        \r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.toggleSignup = this.toggleSignup.bind(this);\r\n      }\r\n\r\n      \r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      toggleSignup() {\r\n        this.setState({\r\n          isSignupOpen: !this.state.isSignupOpen\r\n        });\r\n      }\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        event.preventDefault();\r\n        auth.signInWithEmailAndPassword(this.username.value, this.password.value)\r\n       \r\n        }\r\n\r\n     handleSignUp(event) {\r\n      this.toggleSignup();\r\n      event.preventDefault();\r\n      console.log(\"username : \"+ this.username.value + \"password : \"+this.password.value);\r\n    \r\n      auth.createUserWithEmailAndPassword(this.username.value,this.password.value).then (Credential=>{console.log(Credential)});\r\n     }\r\n\r\n     handleLogOut(event){\r\n        event.preventDefault();\r\n        auth.signOut().then(() => {\r\n            console.log('user signed out');\r\n        });\r\n        <Card notes={\"\"}/>\r\n        \r\n     }\r\n\r\n  \r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                    <div className=\"container-fluid\">\r\n                        \r\n                        <NavbarBrand className=\"mr-auto\"  style={{fontSize:\"30px\" ,fontFamily:\"cursive\",color:\"#D6E149\"}}>Todo App</NavbarBrand>\r\n                        \r\n                            \r\n                            \r\n                            <Nav className=\"ml-auto \" navbar >\r\n                            <div className=\"btn-group mr-auto\" role=\"group\" aria-label=\"Basic example\">\r\n                                <button type=\"button\"  onClick={this.toggleModal} className=\"btn btn-warning\" style={{paddingRight:\"4px\"}}>Login</button>\r\n                                <button type=\"button\"  onClick={this.toggleSignup} className=\"btn btn-success\" >Signup</button>\r\n                                <button type=\"button\"  onClick={this.handleLogOut} className=\"btn btn-danger\" >Logout</button>\r\n                                \r\n                                \r\n                              </div>\r\n                                    \r\n                                \r\n                            </Nav>\r\n                    \r\n                    </div>\r\n                </nav>\r\n                \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}> \r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>              \r\n                <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n\r\n</Modal>\r\n<Modal isOpen={this.state.isSignupOpen} toggle={this.toggleSignup}> \r\n                <ModalHeader toggle={this.toggleSignup}>SignUp</ModalHeader>              \r\n                <ModalBody>\r\n                    <Form onSubmit={this.handleSignUp}>\r\n                    \r\n                               \r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            \r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">SignUp</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n\r\n</Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","export const Config = {\r\n    apiKey: \"AIzaSyASlSjH3fL2GezWLueFMy-nhQ9vuJmJFDo\",\r\n    authDomain: \"next-todo-fc90e.firebaseapp.com\",\r\n    databaseURL: \"https://next-todo-fc90e.firebaseio.com\",\r\n    projectId: \"next-todo-fc90e\",\r\n    storageBucket: \"next-todo-fc90e.appspot.com\",\r\n    messagingSenderId: \"969855624340\",\r\n    appId: \"1:969855624340:web:c9a785664c2c238a3c8081\",\r\n    measurementId: \"G-SKL8Y4KQHR\"\r\n  };","import {Config}from './Config';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';        \r\nimport 'firebase/storage';     // for storage\r\nimport 'firebase/database';    // for realtime database\r\nimport 'firebase/firestore';   // for cloud firestore\r\nimport 'firebase/messaging';   // for cloud messaging\r\nimport 'firebase/functions';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(Config);\r\n    }\r\n\r\nexport const auth=firebase.auth();\r\nexport  const fireauth=firebase.auth;\r\nexport const firestore=firebase.firestore();\r\nexport const firebasestore=firebase.firestore;\r\nexport const database=firebase.database();","import React, { Component } from 'react';\r\nimport Note from \"./Note\";\r\nimport Header from '../components/Navbar';\r\nimport {firestore,auth} from '../firebase/Fire';\r\nimport {CardBody,CardText} from 'reactstrap';\r\nimport Card from './Main';\r\n\r\n  \r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {\r\n      noteText: '',\r\n      notes: [\r\n        {todo:\"\"}\r\n      ],\r\n      id:[]  };\r\n   \r\n  }\r\n \r\n    componentDidMount(){\r\n      auth.onAuthStateChanged(user => {\r\n        if (user) {\r\n          console.log('user logged in: ', user);\r\n          firestore.collection('todos').get().then(querySnapshot => {\r\n            \r\n          querySnapshot.docs.forEach(doc=>{\r\n            \r\n           \r\n           \r\n           this.setState({notes:doc.data(),id:doc.id\r\n           });\r\n           //const data=doc.data();\r\n          // console.log(data);\r\n           \r\n             })});\r\n        } else {\r\n          console.log('user logged out');\r\n          \r\n        }\r\n      })\r\n    }\r\n\r\n \r\n        \r\n   \r\n   \r\n  \r\n \r\n\r\n\r\n  updateNoteText(noteText){\r\n    this.setState({noteText: noteText.target.value})\r\n  }\r\n  \r\n  \r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === \"Enter\"){\r\n     // let noteArr = this.state.notes;\r\n     // noteArr.push(this.state.noteText);\r\n    //  this.setState({ noteText: ''});\r\n    firestore.collection('todos').add({\r\n      todo:this.state.noteText\r\n    })\r\n    this.setState({ noteText: ''});\r\n      \r\n    }\r\n  }\r\n\r\n  deleteNote (index){\r\n    let noteArr = this.state.notes;\r\n    noteArr.splice(index, 1);\r\n    this.setState({ notes: noteArr })\r\n  }\r\n  \r\n\r\n  render() {\r\n\r\n   \r\n     console.log(this.state.notes) ;\r\n     console.log(this.state.id) ;\r\n    \r\n\r\n    return (\r\n      <div>\r\n         \r\n          <Header/>\r\n          \r\n          \r\n             <Card notes={this.state.notes} id={this.state.id}/>\r\n        \r\n          \r\n    \r\n        <div className=\"container\">\r\n        <div className=\"button \" onClick={noteText => this.updateNoteText(noteText)} style ={{fontStyle:\"oblique\",marginBottom:\"10px\",marginTop:\"80px\", color:\"#E54E65\"}}>Add note</div>\r\n        <input  style={{backgroundColor:\"#E2CEEE\"}} placeholder=\"Enter Notes\" type=\"text\" className=\"input \"\r\n        ref={((input) => {this.textInput = input})}\r\n        value={this.state.noteText}\r\n        onChange={noteText => this.updateNoteText(noteText)}\r\n        onKeyPress={this.handleKeyPress.bind(this)}\r\n        />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport {CardBody,CardText} from 'reactstrap';\r\nimport {firestore} from '../firebase/Fire';\r\n  \r\nclass Card extends Component{\r\n\r\n       // deleteTodo (id) {\r\n            //    firestore.collection('todos').doc(id).delete();\r\n           //     } \r\n    \r\n           \r\n        \r\n         render(){\r\n           console.log(this.props.id);\r\n           console.log(this.props.notes);\r\n                return (\r\n<div>\r\n                        \r\n                                        <div className=\"card text-dark mb-3 mt-4 ml-3\" style={{maxWidth: \"50rem\",backgroundColor:\"#e6ff99\"}}>\r\n                        <div className=\"card-content\">\r\n                                <div className=\"level\">\r\n\r\n                                <div className=\"level-left\">\r\n                                <div className=\"level-item\">\r\n                                       \r\n                        <div className=\"card-body\">\r\n                         \r\n                     <p className=\"card-text \"><h3>{this.props.notes.todo}</h3></p>\r\n                     <p className=\"card-text \"><h3> {this.props.id}</h3></p>\r\n               \r\n                        </div>\r\n                      </div>\r\n                      </div>\r\n                      <div className=\"level-right\">\r\n                      <div className=\"level-item\">\r\n                     <button type=\"button\"    className=\"btn btn-danger\" style={{float:\"right\"}}>Delete</button>\r\n                 </div>\r\n                 </div>\r\n                 </div>\r\n                 </div>\r\n                 </div>\r\n                  </div>\r\n                        \r\n                      \r\n                        \r\n                 \r\n                );\r\n        }}\r\n\r\nexport default Card;\r\n\r\n/*{this.props.notes.forEach(todo => {\r\n        <li>{todo}</li>    \r\n    })}*/","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label,NavLink } from 'reactstrap';\r\n\r\nimport {firestore,auth} from '../firebase/Fire'\r\nimport Header from '../components/Navbar';\r\n\r\nconst todoRef = firestore.collection(\"todos\");\r\n\r\nclass App extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      todos: [],\r\n      isUpdate:false,\r\n      update:''\r\n    }\r\n    this.toggleUpdate = this.toggleUpdate.bind(this);\r\n  }\r\n\r\n  addTodo = (e) => {\r\n    e.preventDefault()\r\n\r\n    const ref = todoRef.doc()\r\n    ref.set({\r\n      task: this.state.todo,\r\n      createdAt:(new Date()).getTime(),\r\n      done: false,\r\n      id: ref.id\r\n    })\r\n    .then(function(docRef) {\r\n      console.log(docRef)\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error adding document: \", error);\r\n    });\r\n    \r\n  }\r\n  toggleUpdate() {\r\n    this.setState({\r\n      isUpdate: !this.state.isUpdate\r\n    });\r\n  }\r\n  updateTodo=(e)=>{\r\n    this.toggleUpdate();\r\n    e.preventDefault();\r\n    const a=e.target\r\n    const b=this.state.update\r\n    const ref = todoRef.doc()\r\n    todoRef.doc(b).update({\r\n     task :this.username.value\r\n      \r\n  })\r\n    .then(function(docRef) {\r\n      console.log(docRef)\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error updating document: \", error);\r\n    });\r\n    \r\n  }\r\n\r\n  deleteTodo = (e) => {\r\n    todoRef.doc(e.target.value).delete().then(function() {\r\n      console.log(\"Document successfully deleted!\");\r\n    }).catch(function(error) {\r\n      console.error(\"Error removing document: \", error);\r\n    });\r\n  }\r\n  handleUpdate = (e) => {\r\n    this.toggleUpdate();\r\n    const t = e.target\r\n    this.setState({\r\n      update: t.value\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const t = e.target\r\n    this.setState({\r\n      [t.name]: t.value,\r\n      \r\n    })\r\n  }\r\n\r\n  componentWillMount () {\r\n    todoRef.orderBy('createdAt').onSnapshot((docSnapShot) => {\r\n      let todos = []\r\n      docSnapShot.forEach(doc => {todos.push(doc.data())})\r\n      this.setState({\r\n        todos,\r\n        loaded: true\r\n      })\r\n    })\r\n    \r\n\r\n  }\r\n  \r\n\r\n  renderTodoList () {\r\n    const ListItem = this.state.todos.map((todo, index) => {\r\n      return (\r\n        <div className=\"card text-dark mb-3 mt-4 ml-3\" style={{maxWidth: \"50rem\",backgroundColor:\"#e6ff99\"}}>\r\n        <div className=\"card-content\">\r\n                \r\n\r\n               \r\n                       \r\n        <div className=\"card-body\">\r\n         \r\n     <p className=\"card-text \"><h3>{todo.task}</h3></p>\r\n     \r\n\r\n        \r\n      \r\n     \r\n      <button value={todo.id} className=\"btn btn-sm btn-danger\" onClick={this.deleteTodo} style={{float:\"right\"}}>X</button>\r\n      <button  value={todo.id} className=\"btn btn-sm btn-info\" onClick={this.handleUpdate} style={{float:\"right\"}}>Update</button>\r\n     \r\n      <Modal isOpen={this.state.isUpdate} toggle={this.toggleUpdate}> \r\n                <ModalHeader toggle={this.toggleUpdate}>Update</ModalHeader>              \r\n                <ModalBody>\r\n                    <Form  onSubmit={this.updateTodo}>\r\n                    \r\n                               \r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Task</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            \r\n                            \r\n                            <Button type=\"submit\" value={todo.id}color=\"primary\">Update</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n\r\n</Modal>\r\n \r\n </div>\r\n </div>\r\n </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div>\r\n{ListItem}\r\n      </div>\r\n        \r\n     \r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    console.log(this.state.notes)\r\n    \r\n    return (\r\n      \r\n      <div className=\"App\">\r\n        <Header/>\r\n        \r\n        <form onSubmit={this.addTodo}>\r\n          <div className=\"input-group\">\r\n            <input type=\"text\"  onChange={this.handleChange} name=\"todo\" style={{backgroundColor:\"#E2CEEE\",marginTop:\"20px\",marginLeft:\"8px\"}} />\r\n            <button className=\"btn btn-primary\" type=\"submit\" onClick={this.addTodo} style={{marginTop:\"20px\",marginLeft:\"8px\"}}>Add Todo</button>\r\n          </div>\r\n        </form>\r\n        {this.renderTodoList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","sourceRoot":""}