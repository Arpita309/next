{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.6ffcda54a8160affa104.hot-update.js","sources":["webpack:///./pages/Home.js","webpack:///./pages/home.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Note from \"./Note\";\r\nimport Header from '../components/Navbar';\r\nimport {firestore,auth} from '../firebase/fire';\r\nimport Card from'./main'\r\n  \r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {\r\n      noteText: '',\r\n      notes: [],\r\n    };\r\n  }\r\n    componentDidMount(){\r\n      auth.onAuthStateChanged(user => {\r\n        if (user) {\r\n          console.log('user logged in: ', user);\r\n          firestore.collection('users').get().then(querySnapshot => {\r\n           this.setState({notes:querySnapshot.docs});\r\n             });\r\n        } else {\r\n          console.log('user logged out');\r\n          \r\n        }\r\n      })\r\n    }\r\n\r\n  updateNoteText(noteText){\r\n    this.setState({noteText: noteText.target.value})\r\n  }\r\n  \r\n  addNote() {\r\n    if (this.state.noteText === '') {return}\r\n    let noteArr = this.state.notes;\r\n    noteArr.push(this.state.noteText);\r\n    this.setState({ noteText: ''});\r\n    this.textInput.focus();\r\n    firestore.collection('users').add({\r\n      todo:this.state.noteText\r\n    })\r\n\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === \"Enter\"){\r\n      let noteArr = this.state.notes;\r\n      noteArr.push(this.state.noteText);\r\n      this.setState({ noteText: ''});\r\n      \r\n    }\r\n  }\r\n\r\n  deleteNote (index){\r\n    let noteArr = this.state.notes;\r\n    noteArr.splice(index, 1);\r\n    this.setState({ notes: noteArr })\r\n  }\r\n\r\n  render() {\r\n\r\n    \r\n\r\n    return (\r\n      <div>\r\n         \r\n          <Header/>\r\n          <Card notes={this.state.notes.todo}/>\r\n        \r\n        <div className=\"container\">\r\n        <div className=\"button \" onClick={this.addNote.bind(this)} style ={{fontStyle:\"oblique\",marginBottom:\"10px\",marginTop:\"80px\", color:\"#E54E65\"}}>Add note</div>\r\n        <input  style={{backgroundColor:\"#E2CEEE\"}} placeholder=\"Enter Notes\" type=\"text\" className=\"input \"\r\n        ref={((input) => {this.textInput = input})}\r\n        value={this.state.noteText}\r\n        onChange={noteText => this.updateNoteText(noteText)}\r\n        onKeyPress={this.handleKeyPress.bind(this)}\r\n        />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport Note from \"./Note\";\r\nimport Header from '../components/Navbar';\r\nimport {firestore,auth} from '../firebase/fire';\r\nimport Card from'./main'\r\n  \r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {\r\n      noteText: '',\r\n      notes: [],\r\n    };\r\n  }\r\n    componentDidMount(){\r\n      auth.onAuthStateChanged(user => {\r\n        if (user) {\r\n          console.log('user logged in: ', user);\r\n          firestore.collection('users').get().then(querySnapshot => {\r\n           this.setState({notes:querySnapshot.docs});\r\n             });\r\n        } else {\r\n          console.log('user logged out');\r\n          \r\n        }\r\n      })\r\n    }\r\n\r\n  updateNoteText(noteText){\r\n    this.setState({noteText: noteText.target.value})\r\n  }\r\n  \r\n  addNote() {\r\n    if (this.state.noteText === '') {return}\r\n    let noteArr = this.state.notes;\r\n    noteArr.push(this.state.noteText);\r\n    this.setState({ noteText: ''});\r\n    this.textInput.focus();\r\n    firestore.collection('users').add({\r\n      todo:this.state.noteText\r\n    })\r\n\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === \"Enter\"){\r\n      let noteArr = this.state.notes;\r\n      noteArr.push(this.state.noteText);\r\n      this.setState({ noteText: ''});\r\n      \r\n    }\r\n  }\r\n\r\n  deleteNote (index){\r\n    let noteArr = this.state.notes;\r\n    noteArr.splice(index, 1);\r\n    this.setState({ notes: noteArr })\r\n  }\r\n\r\n  render() {\r\n\r\n    \r\n\r\n    return (\r\n      <div>\r\n         \r\n          <Header/>\r\n          <Card notes={this.state.notes.todo}/>\r\n        \r\n        <div className=\"container\">\r\n        <div className=\"button \" onClick={this.addNote.bind(this)} style ={{fontStyle:\"oblique\",marginBottom:\"10px\",marginTop:\"80px\", color:\"#E54E65\"}}>Add note</div>\r\n        <input  style={{backgroundColor:\"#E2CEEE\"}} placeholder=\"Enter Notes\" type=\"text\" className=\"input \"\r\n        ref={((input) => {this.textInput = input})}\r\n        value={this.state.noteText}\r\n        onChange={noteText => this.updateNoteText(noteText)}\r\n        onKeyPress={this.handleKeyPress.bind(this)}\r\n        />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAsCA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AA3CA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAIA;;;AAWA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AA3EA;AACA;AA6EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAsCA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AA3CA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAIA;;;AAWA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AA3EA;AACA;AA6EA;;;;A","sourceRoot":""}